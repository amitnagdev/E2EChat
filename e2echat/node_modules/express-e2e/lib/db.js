'use strict';

/***********************************
 *** START ~ Module dependencies ***
 ***********************************/

// Global dependencies
const _ = require('lodash'),
    chalk = require('chalk'),
    mongoose = require('mongoose');


/***********************************
 *** END ~ Module dependencies ***
 ***********************************/

mongoose.Promise = Promise;

let _maxDBAttempts = 5;

const connectDB = (dbUrl, dbOptions, currentAttempt, next) => {
    mongoose.connect(dbUrl, dbOptions, (err) => {
      if(err) {
          if(currentAttempt < _maxDBAttempts) {
              connectDB(dbUrl, dbOptions, ++currentAttempt, next);
          } else {
              console.error(chalk.red(`Oops! Could not connect to MongoDB in ${currentAttempt} attempt${currentAttempt > 1 ? 's' : ''}'.`));
              console.log(chalk.red(err));
          }
      } else {
          console.log(chalk.green(`MongoDB connected in ${currentAttempt} attempt${currentAttempt > 1 ? 's' : ''}.`));
      }

      if(next && _.isFunction(next)) {
          next(err, mongoose.connection);
      }
    });
  };
  
  module.exports = {
      connect: (dbUrl, dbOptions, maxDBAttempts, next) => {
          _maxDBAttempts = maxDBAttempts || _maxDBAttempts;
          connectDB(dbUrl, dbOptions, 1, next);
      }
  };