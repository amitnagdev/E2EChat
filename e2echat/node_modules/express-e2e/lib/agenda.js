'use strict';

/***********************************
 *** START ~ Module dependencies ***
 ***********************************/

// Global dependencies
const _ = require('lodash'),
    os = require('os'),
    util = require('util'),
    path = require('path'),
    Agenda = require('agenda');

// Project dependencies
const helper = require('./helper'),
    ssl = require('./ssl');


/***********************************
 *** END ~ Module dependencies ***
 ***********************************/

let agenda;

exports.start = (config, settings) => {
    let dbUrl = (config.db && config.db.url) || process.env.MONGO_URL || settings.mongoUrl;
    let cronDbUrl = (config.cronDb && config.cronDb.url) || process.env.CRON_DB_URL || settings.cronDbUrl || dbUrl;
    let collectionName = settings.cronDbCollection || 'jobs';

    if (settings.cronJobs && cronDbUrl) {
        let options = ssl.getMongoSettings();
        agenda = new Agenda({
            db: { address: cronDbUrl, collection: collectionName, options: options },
            name: os.hostname() + '-' + process.pid
        });

        agenda.on('error', () => {
            console.log('Agenda jobs not startd: %s', util.inspect(arguments));
        });

        agenda.on('ready', () => {
            // Globbing jobs
            helper.getGlobbedFiles(settings.cronJobs).forEach((job) => {
                require(path.resolve(job))(agenda);
            });

            agenda.start();
        });
    }
};

exports.agenda = () => {
    return agenda;
};